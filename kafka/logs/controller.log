[2022-11-21 15:32:58,017] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 15:32:58,821] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 15:32:59,836] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 15:33:04,327] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 15:33:04,523] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-11-21 15:33:04,540] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-11-21 15:33:04,643] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-11-21 15:33:04,655] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-11-21 15:33:04,662] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-11-21 15:33:04,669] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-11-21 15:33:04,700] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 4294967351) (kafka.controller.KafkaController)
[2022-11-21 15:33:04,712] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-11-21 15:33:04,726] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-11-21 15:33:04,751] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-11-21 15:33:04,752] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 15:33:04,752] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 15:33:04,752] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-11-21 15:33:04,753] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 15:33:04,764] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-11-21 15:33:04,764] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-11-21 15:33:04,764] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-11-21 15:33:04,765] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-11-21 15:33:04,766] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-11-21 15:33:04,791] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:33:04,798] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:33:04,798] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 15:33:04,808] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:33:04,809] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:33:04,809] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 15:33:04,810] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 15:33:04,813] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 15:33:04,814] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-11-21 15:33:04,856] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 15:33:04,857] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 15:33:04,857] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-11-21 15:33:04,857] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-11-21 15:33:04,864] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-11-21 15:33:04,923] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 15:33:04,928] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-11-21 15:33:04,954] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 15:33:04,996] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-11-21 15:33:04,999] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-11-21 15:33:05,015] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-11-21 15:33:05,018] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 15:33:05,027] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-11-21 15:33:05,035] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 15:33:05,036] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 4294967351, 2 -> 4294967356) (kafka.controller.KafkaController)
[2022-11-21 15:33:05,404] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-11-21 15:33:05,404] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-11-21 15:33:05,407] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 15:33:05,407] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-11-21 15:33:05,408] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-11-21 15:33:05,412] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 15:33:05,413] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 4294967351, 2 -> 4294967356, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 15:33:05,472] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 15:33:05,491] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 15:33:09,386] INFO [Controller id=1] New topics: [Set(topic-0)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic-0,Some(60TfpTXuTWOj9Jv5-BTfXg),Map(topic-0-0 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-21 15:33:09,388] INFO [Controller id=1] New partition creation callback for topic-0-0 (kafka.controller.KafkaController)
[2022-11-21 15:33:09,933] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-21 15:33:09,933] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-21 15:33:09,935] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-11-21 15:33:09,936] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-11-21 15:33:12,388] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(3Pk9rnsdTNm0q-xH_eCm2A),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-21 15:33:12,389] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-11-21 15:33:44,908] INFO [Controller id=3] 3 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-11-21 15:33:44,909] INFO [Controller id=3] Registering handlers (kafka.controller.KafkaController)
[2022-11-21 15:33:44,912] INFO [Controller id=3] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-11-21 15:33:44,913] INFO [Controller id=3] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-11-21 15:33:44,915] INFO [Controller id=3] Initializing controller context (kafka.controller.KafkaController)
[2022-11-21 15:33:44,915] DEBUG [Controller id=2] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 15:33:44,921] INFO [Controller id=3] Initialized broker epochs cache: HashMap(2 -> 4294967356, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 15:33:44,941] DEBUG [Controller id=3] Register BrokerModifications handler for Set(2, 3) (kafka.controller.KafkaController)
[2022-11-21 15:33:44,963] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-11-21 15:33:44,969] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-11-21 15:33:44,974] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-11-21 15:33:44,974] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-11-21 15:33:44,975] INFO [Controller id=3] Currently active brokers in the cluster: Set(2, 3) (kafka.controller.KafkaController)
[2022-11-21 15:33:44,975] INFO [Controller id=3] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 15:33:44,975] INFO [Controller id=3] Current list of topics in the cluster: HashSet(topic-0, __consumer_offsets) (kafka.controller.KafkaController)
[2022-11-21 15:33:44,976] INFO [Controller id=3] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-11-21 15:33:44,980] INFO [Controller id=3] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-11-21 15:33:44,980] INFO [Controller id=3] List of topics ineligible for deletion: topic-0,__consumer_offsets (kafka.controller.KafkaController)
[2022-11-21 15:33:44,980] INFO [Controller id=3] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-11-21 15:33:44,981] INFO [Topic Deletion Manager 3] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic-0, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-11-21 15:33:44,981] INFO [Controller id=3] Sending update metadata request (kafka.controller.KafkaController)
[2022-11-21 15:33:44,988] INFO [ReplicaStateMachine controllerId=3] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:33:44,991] INFO [RequestSendThread controllerId=3] Controller 3 connected to 10.0.0.3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 15:33:44,994] INFO [ReplicaStateMachine controllerId=3] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:33:44,998] INFO [RequestSendThread controllerId=3] Controller 3 connected to 10.0.0.2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 15:33:45,014] INFO [ReplicaStateMachine controllerId=3] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:33:45,189] DEBUG [ReplicaStateMachine controllerId=3] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=topic-0,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=topic-0,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=topic-0,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:33:45,189] INFO [PartitionStateMachine controllerId=3] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 15:33:45,194] INFO [PartitionStateMachine controllerId=3] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 15:33:45,229] DEBUG [PartitionStateMachine controllerId=3] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, topic-0-0 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 15:33:45,230] INFO [Controller id=3] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-11-21 15:33:45,235] INFO [Controller id=3] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 15:33:45,235] INFO [Controller id=3] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 15:33:45,235] INFO [Controller id=3] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-11-21 15:33:45,236] INFO [Controller id=3] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-11-21 15:33:45,237] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-11-21 15:33:45,269] INFO [Controller id=3] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-11-21 15:33:50,270] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-21 15:33:50,270] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-21 15:33:50,276] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), __consumer_offsets-47 -> List(1), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-32 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1)) (kafka.controller.KafkaController)
[2022-11-21 15:33:50,277] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-11-21 15:33:50,279] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-11-21 15:33:50,279] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-11-21 15:33:50,279] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-11-21 15:33:50,280] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-11-21 15:33:50,280] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-11-21 15:34:52,978] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-11-21 15:34:52,978] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-11-21 15:34:52,980] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 15:34:52,981] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 15:34:52,982] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,982] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,983] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,987] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,987] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,987] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,989] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,989] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,990] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 15:34:52,993] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-11-21 15:34:53,170] INFO [Controller id=3] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-11-21 15:34:53,170] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-11-21 15:34:53,173] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2022-11-21 15:34:53,174] INFO [Controller id=3] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-11-21 15:34:53,181] INFO [RequestSendThread controllerId=3] Controller 3 connected to 10.0.0.1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 15:34:53,187] DEBUG [Controller id=1] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 15:34:53,364] DEBUG [Controller id=3] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-11-21 15:34:53,365] INFO [Controller id=3] Updated broker epochs cache: HashMap(1 -> 4294967492, 2 -> 4294967356, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 15:34:53,877] DEBUG [Controller id=3] Updating ISRs for partitions: Set(topic-0-0). (kafka.controller.KafkaController)
[2022-11-21 15:34:53,920] DEBUG [Controller id=3] ISR for partition topic-0-0 updated to [3,2,1] and zkVersion updated to [2] (kafka.controller.KafkaController)
