[2022-11-21 16:49:08,290] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 16:49:09,260] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 16:49:10,264] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 16:49:23,877] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 16:49:23,984] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-11-21 16:49:23,998] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-11-21 16:49:24,077] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-11-21 16:49:24,122] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-11-21 16:49:24,131] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-11-21 16:49:24,144] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-11-21 16:49:24,279] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 4294967336) (kafka.controller.KafkaController)
[2022-11-21 16:49:24,302] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-11-21 16:49:24,328] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-11-21 16:49:24,360] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-11-21 16:49:24,360] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 16:49:24,361] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 16:49:24,361] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-11-21 16:49:24,362] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 16:49:24,377] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-11-21 16:49:24,377] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-11-21 16:49:24,378] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-11-21 16:49:24,378] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-11-21 16:49:24,379] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-11-21 16:49:24,404] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:49:24,405] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:49:24,421] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:49:24,422] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:49:24,422] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 16:49:24,423] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 16:49:24,426] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 16:49:24,426] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-11-21 16:49:24,435] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 16:49:24,490] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 16:49:24,490] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 16:49:24,491] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-11-21 16:49:24,491] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-11-21 16:49:24,501] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-11-21 16:49:24,559] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-11-21 16:49:24,671] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-11-21 16:49:24,671] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-11-21 16:49:24,674] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 16:49:24,675] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-11-21 16:49:24,678] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-11-21 16:49:24,681] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 16:49:24,684] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 4294967336, 2 -> 4294967357) (kafka.controller.KafkaController)
[2022-11-21 16:49:24,778] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 16:49:24,802] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 16:49:25,611] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-11-21 16:49:25,612] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-11-21 16:49:25,615] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 16:49:25,615] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-11-21 16:49:25,616] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-11-21 16:49:25,621] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 16:49:25,622] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 4294967336, 2 -> 4294967357, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 16:49:25,709] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 16:49:25,735] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 16:49:29,561] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-21 16:49:29,561] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-21 16:49:30,252] INFO [Controller id=1] New topics: [Set(topic-0)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic-0,Some(dz1oNv15R9G6E7tap6Rr2w),Map(topic-0-0 -> ReplicaAssignment(replicas=1,3,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-21 16:49:30,253] INFO [Controller id=1] New partition creation callback for topic-0-0 (kafka.controller.KafkaController)
[2022-11-21 16:49:33,559] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(8I_zKgBzREWp9yevPBTfGw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-21 16:49:33,560] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-11-21 16:50:30,247] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-11-21 16:50:30,249] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-11-21 16:50:30,252] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-11-21 16:50:30,254] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-11-21 16:50:30,254] DEBUG [Controller id=3] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 16:50:30,256] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-11-21 16:50:30,262] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 4294967357, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 16:50:30,282] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2, 3) (kafka.controller.KafkaController)
[2022-11-21 16:50:30,313] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-11-21 16:50:30,319] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-11-21 16:50:30,321] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-11-21 16:50:30,321] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-11-21 16:50:30,322] INFO [Controller id=2] Currently active brokers in the cluster: Set(2, 3) (kafka.controller.KafkaController)
[2022-11-21 16:50:30,323] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 16:50:30,323] INFO [Controller id=2] Current list of topics in the cluster: HashSet(topic-0, __consumer_offsets) (kafka.controller.KafkaController)
[2022-11-21 16:50:30,324] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-11-21 16:50:30,331] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-11-21 16:50:30,332] INFO [Controller id=2] List of topics ineligible for deletion: topic-0,__consumer_offsets (kafka.controller.KafkaController)
[2022-11-21 16:50:30,332] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-11-21 16:50:30,332] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic-0, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-11-21 16:50:30,333] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-11-21 16:50:30,340] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:50:30,344] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:50:30,348] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.0.0.2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 16:50:30,353] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.0.0.3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 16:50:30,373] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:50:30,597] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=20,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=topic-0,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OnlineReplica, [Topic=topic-0,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=topic-0,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:50:30,597] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 16:50:30,600] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 16:50:30,682] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, topic-0-0 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 16:50:30,683] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-11-21 16:50:30,687] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 16:50:30,687] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 16:50:30,687] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-11-21 16:50:30,688] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-11-21 16:50:30,689] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-11-21 16:50:30,725] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-11-21 16:50:35,727] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-21 16:50:35,727] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-21 16:50:35,734] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), topic-0-0 -> List(1, 3, 2), __consumer_offsets-33 -> List(1), __consumer_offsets-36 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)) (kafka.controller.KafkaController)
[2022-11-21 16:50:35,735] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-11-21 16:50:35,738] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-11-21 16:50:35,738] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-11-21 16:50:35,738] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-11-21 16:50:35,738] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-11-21 16:50:35,738] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-11-21 16:50:53,682] DEBUG [Controller id=1] Updating ISRs for partitions: Set(topic-0-0). (kafka.controller.KafkaController)
[2022-11-21 16:51:33,704] WARN [Controller id=1] Failed to update ISR for partition topic-0-0 (kafka.controller.KafkaController)
kafka.zookeeper.ZooKeeperClientExpiredException: Session expired either before or while waiting for connection
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:279)
	at kafka.zookeeper.ZooKeeperClient.$anonfun$waitUntilConnected$1(ZooKeeperClient.scala:261)
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:261)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1797)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1769)
	at kafka.zk.KafkaZkClient.setTopicPartitionStatesRaw(KafkaZkClient.scala:204)
	at kafka.zk.KafkaZkClient.updateLeaderAndIsr(KafkaZkClient.scala:262)
	at kafka.controller.KafkaController.processAlterIsr(KafkaController.scala:2326)
	at kafka.controller.KafkaController.process(KafkaController.scala:2456)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-11-21 16:51:33,714] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-11-21 16:51:33,715] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-11-21 16:51:33,717] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 16:51:33,719] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 16:51:33,721] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,722] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,722] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,726] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,726] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,726] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,727] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,727] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,727] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,730] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-11-21 16:51:33,790] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-11-21 16:51:33,791] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-11-21 16:51:33,796] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,797] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-11-21 16:51:33,805] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.0.0.1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 16:51:33,851] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 16:51:33,955] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-11-21 16:51:33,957] INFO [Controller id=2] Updated broker epochs cache: HashMap(1 -> 4294967494, 2 -> 4294967357, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 16:51:34,616] DEBUG [Controller id=2] Updating ISRs for partitions: Set(topic-0-0). (kafka.controller.KafkaController)
[2022-11-21 16:51:34,670] DEBUG [Controller id=2] ISR for partition topic-0-0 updated to [3,2,1] and zkVersion updated to [3] (kafka.controller.KafkaController)
[2022-11-21 16:51:53,803] INFO [Controller id=2] Ignoring AlterIsr due to stale broker epoch 4294967336 for broker 1 (kafka.controller.KafkaController)
