[2022-11-21 12:50:03,962] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 12:50:05,102] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 12:50:06,035] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@27082746, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-21 12:50:19,745] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 12:50:19,859] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-11-21 12:50:19,864] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-11-21 12:50:19,963] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-11-21 12:50:19,969] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-11-21 12:50:19,973] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-11-21 12:50:19,976] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-11-21 12:50:20,004] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 4294967336) (kafka.controller.KafkaController)
[2022-11-21 12:50:20,012] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-11-21 12:50:20,019] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-11-21 12:50:20,063] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 12:50:20,071] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-11-21 12:50:20,071] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 12:50:20,071] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 12:50:20,072] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-11-21 12:50:20,074] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-11-21 12:50:20,074] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-11-21 12:50:20,075] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-11-21 12:50:20,075] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-11-21 12:50:20,077] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-11-21 12:50:20,118] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:50:20,122] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:50:20,167] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:50:20,171] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:50:20,171] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 12:50:20,172] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 12:50:20,176] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 12:50:20,176] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-11-21 12:50:20,206] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 12:50:20,206] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 12:50:20,207] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-11-21 12:50:20,207] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-11-21 12:50:20,209] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-11-21 12:50:20,210] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 12:50:20,281] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-11-21 12:50:20,506] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-11-21 12:50:20,507] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-11-21 12:50:20,512] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 12:50:20,514] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-11-21 12:50:20,518] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-11-21 12:50:20,519] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 4294967336, 2 -> 4294967355) (kafka.controller.KafkaController)
[2022-11-21 12:50:20,520] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 12:50:20,604] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 12:50:20,640] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 12:50:21,779] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-11-21 12:50:21,779] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-11-21 12:50:21,784] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-11-21 12:50:21,784] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-11-21 12:50:21,786] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-11-21 12:50:21,787] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 4294967336, 2 -> 4294967355, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 12:50:21,791] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 12:50:21,865] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-21 12:50:21,886] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 12:50:25,288] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-21 12:50:25,288] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-21 12:50:25,525] INFO [Controller id=1] New topics: [Set(topic-0)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic-0,Some(ZbN2bUg3SyKVTmr1nE8QEA),Map(topic-0-0 -> ReplicaAssignment(replicas=1,3,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-21 12:50:25,526] INFO [Controller id=1] New partition creation callback for topic-0-0 (kafka.controller.KafkaController)
[2022-11-21 12:50:28,962] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(ZiNB-8nPSxyJoIlun3UjAQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-21 12:50:28,962] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-11-21 12:51:26,840] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-11-21 12:51:26,842] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-11-21 12:51:26,844] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-11-21 12:51:26,846] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-11-21 12:51:26,847] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-11-21 12:51:26,852] DEBUG [Controller id=3] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 12:51:26,853] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 4294967355, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 12:51:26,865] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2, 3) (kafka.controller.KafkaController)
[2022-11-21 12:51:26,903] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-11-21 12:51:26,909] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-11-21 12:51:26,912] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-11-21 12:51:26,912] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-11-21 12:51:26,913] INFO [Controller id=2] Currently active brokers in the cluster: Set(2, 3) (kafka.controller.KafkaController)
[2022-11-21 12:51:26,914] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-21 12:51:26,914] INFO [Controller id=2] Current list of topics in the cluster: HashSet(topic-0, __consumer_offsets) (kafka.controller.KafkaController)
[2022-11-21 12:51:26,914] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-11-21 12:51:26,919] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-11-21 12:51:26,919] INFO [Controller id=2] List of topics ineligible for deletion: topic-0,__consumer_offsets (kafka.controller.KafkaController)
[2022-11-21 12:51:26,920] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-11-21 12:51:26,920] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic-0, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-11-21 12:51:26,921] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-11-21 12:51:26,929] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:51:26,930] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.0.0.2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 12:51:26,932] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.0.0.3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 12:51:26,936] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:51:26,955] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:51:27,127] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OnlineReplica, [Topic=topic-0,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=topic-0,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=topic-0,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:51:27,127] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 12:51:27,131] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 12:51:27,191] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, topic-0-0 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 12:51:27,191] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-11-21 12:51:27,195] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 12:51:27,196] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-11-21 12:51:27,196] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-11-21 12:51:27,196] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-11-21 12:51:27,197] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-11-21 12:51:27,225] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-11-21 12:51:32,226] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-21 12:51:32,226] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-21 12:51:32,230] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-25 -> List(1), topic-0-0 -> List(1, 3, 2), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)) (kafka.controller.KafkaController)
[2022-11-21 12:51:32,231] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-11-21 12:51:32,233] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-11-21 12:51:32,233] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-11-21 12:51:32,233] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-11-21 12:51:32,233] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-11-21 12:51:32,233] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-11-21 12:51:49,439] DEBUG [Controller id=1] Updating ISRs for partitions: Set(topic-0-0). (kafka.controller.KafkaController)
[2022-11-21 12:52:29,185] WARN [Controller id=1] Failed to update ISR for partition topic-0-0 (kafka.controller.KafkaController)
kafka.zookeeper.ZooKeeperClientExpiredException: Session expired either before or while waiting for connection
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:279)
	at kafka.zookeeper.ZooKeeperClient.$anonfun$waitUntilConnected$1(ZooKeeperClient.scala:261)
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:261)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1797)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1769)
	at kafka.zk.KafkaZkClient.setTopicPartitionStatesRaw(KafkaZkClient.scala:204)
	at kafka.zk.KafkaZkClient.updateLeaderAndIsr(KafkaZkClient.scala:262)
	at kafka.controller.KafkaController.processAlterIsr(KafkaController.scala:2326)
	at kafka.controller.KafkaController.process(KafkaController.scala:2456)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-11-21 12:52:29,193] DEBUG [Controller id=1] Updating ISRs for partitions: Set(topic-0-0). (kafka.controller.KafkaController)
[2022-11-21 12:52:29,199] WARN [Controller id=1] Failed to update ISR for partition topic-0-0 (kafka.controller.KafkaController)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at kafka.zk.KafkaZkClient$.kafka$zk$KafkaZkClient$$unwrapResponseWithControllerEpochCheck(KafkaZkClient.scala:2008)
	at kafka.zk.KafkaZkClient.$anonfun$retryRequestsUntilConnected$2(KafkaZkClient.scala:1770)
	at scala.collection.StrictOptimizedIterableOps.map(StrictOptimizedIterableOps.scala:99)
	at scala.collection.StrictOptimizedIterableOps.map$(StrictOptimizedIterableOps.scala:86)
	at scala.collection.mutable.ArrayBuffer.map(ArrayBuffer.scala:42)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1770)
	at kafka.zk.KafkaZkClient.setTopicPartitionStatesRaw(KafkaZkClient.scala:204)
	at kafka.zk.KafkaZkClient.updateLeaderAndIsr(KafkaZkClient.scala:262)
	at kafka.controller.KafkaController.processAlterIsr(KafkaController.scala:2326)
	at kafka.controller.KafkaController.process(KafkaController.scala:2456)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-11-21 12:52:29,200] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-11-21 12:52:29,201] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-11-21 12:52:29,204] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-11-21 12:52:29,205] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-11-21 12:52:29,207] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,207] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,207] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,220] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,220] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,220] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,225] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,230] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,230] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,234] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-11-21 12:52:29,444] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-11-21 12:52:29,445] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-11-21 12:52:29,448] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,449] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-11-21 12:52:29,457] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.0.0.1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-21 12:52:29,482] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-11-21 12:52:29,664] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-11-21 12:52:29,667] INFO [Controller id=2] Updated broker epochs cache: HashMap(1 -> 4294967502, 2 -> 4294967355, 3 -> 4294967359) (kafka.controller.KafkaController)
[2022-11-21 12:52:30,177] DEBUG [Controller id=2] Updating ISRs for partitions: Set(topic-0-0). (kafka.controller.KafkaController)
[2022-11-21 12:52:30,207] DEBUG [Controller id=2] ISR for partition topic-0-0 updated to [3,2,1] and zkVersion updated to [3] (kafka.controller.KafkaController)
